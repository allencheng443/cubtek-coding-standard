{
  "name": "cubtek-coding-standard",
  "displayName": "CubTEK Coding Standard",
  "description": "CubTEK C/C++ coding standard formatter and checker",
  "repository": {
    "type": "git",
    "url": "https://github.com/allencheng443/cubtek-coding-standard.git"
  },
  "publisher": "CubTEK",
  "homepage": "https://github.com/allencheng443/cubtek-coding-standard",
  "bugs": {
    "url": "https://github.com/allencheng443/cubtek-coding-standard/issues"
  },
  "version": "1.2.0",
  "engines": {
    "vscode": "^1.98.0",
    "bun": ">=1.0.0"
  },
  "categories": [
    "Formatters",
    "Linters"
  ],
  "activationEvents": [
    "onLanguage:c",
    "onLanguage:cpp"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cubtek.checkFile",
        "title": "CubTEK: Check Current File"
      },
      {
        "command": "cubtek.checkProject",
        "title": "CubTEK: Check Entire Project"
      },
      {
        "command": "cubtek.showReport",
        "title": "CubTEK: Show Compliance Report"
      }
    ],
    "configuration": {
      "title": "CubTEK Coding Standard",
      "properties": {
        "cubtek.formatOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Format document on save"
        },
        "cubtek.checkOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Check coding standard on save"
        },
        "cubtek.severity": {
          "type": "string",
          "enum": [
            "error",
            "warning",
            "information",
            "hint"
          ],
          "default": "warning",
          "description": "Default severity for diagnostics"
        },
        "cubtek.configPath": {
          "type": "string",
          "default": "",
          "description": "Path to custom configuration file"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "bun run build",
    "vscode:test": "vscode-test",
    "build": "bun run build:src && bun run build:test",
    "build:src": "tsc -p ./tsconfig.json",
    "build:test": "tsc -p ./tsconfig.test.json",
    "watch": "tsc -watch -p ./",
    "dev": "bun run build && bun run watch",
    "lint": "eslint src test --ext ts",
    "lint:fix": "eslint src test --ext ts --fix",
    "test": "bun test",
    "test:coverage": "bun test --coverage",
    "prepack": "bun run lint && bun run build && bun run test",
    "docs": "typedoc --out docs/api src/",
    "check-types": "tsc --noEmit -p ./tsconfig.json && tsc --noEmit -p ./tsconfig.test.json"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "bun-types": "latest",
    "eslint": "^9.21.0",
    "glob": "^8.1.0",
    "minimatch": "^5.1.6",
    "typedoc": "^0.25.12",
    "typescript": "5.8.2"
  },
  "dependencies": {
    "yaml": "^2.7.0"
  }
}
